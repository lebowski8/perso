clear all
close all
%clc
home

% Cf Tarbouriech04

% n = 2;
% c = 2;
m = 1;
% 
% xn = zeros(n,1);
% xc = zeros(c,1);

%% le système
sys = ss(); 

sys.a = 1.2;
sys.b = 1;
sys.c = 1;
sys.d = 0;

dimA = size(sys.a)
n = dimA(2)

%% le contrôleur
Ac = 1;
Bc = -0.5;
Cc = 1;
Dc = -1;

sysc = ss(Ac,Bc,Cc,Dc);

dimAc = size(sysc.a)
c = dimAc(2)

%% le système bouclé

A = [sys.a + sys.b*Dc*sys.c , sys.b*Cc ; Bc*sys.c , Ac];
B = [sys.b ; zeros(c,1)]; 
R = [zeros(n,1) ; ones(c,1)];
K = [Dc*sys.c , Cc];



%% problème de minimisation (25)
% les dimensions sont détaillées "Corollary 1"
W = sdpvar(n+c,n+c,'symmetric');
Z = sdpvar(n,m);
S = sdpvar(m,m,'diagonal');
Y = sdpvar(m,n+c);
mu = sdpvar(1);

%% 
uo = 1; % control bound ??
Theta0 = {[1;1] , [1;-1] , [-1;1] , [-1;-1]}; % défini la zone à respecter
r = length(Theta0);

%% définition des contraintes
cdt1 = [W -Y' -W*A' ; -Y 2*S S*B'+Z'*R' ; -A*W B*S+R*Z W];
cdt2 = [W W*K'-Y' ; K*W-Y uo^2];

F = (cdt1 > 0) + (cdt2 >= 0); 

for i=1:r
   F = F + ([mu Theta0{i}' ; Theta0{i} W] >= 0); 
end


% définition des options du solver
options = sdpsettings('verbose',1,'solver','sedumi');

% résolution du problème par le solver
sol = solvesdp(F,[mu],options);
checkset(F);

beta = 1/sqrt(value(mu))
Ec = value(Z*inv(value(S)))












